{"version":3,"sources":["../node_modules/ngx-bootstrap/collapse/fesm5/ngx-bootstrap-collapse.js","../node_modules/ngx-bootstrap/pagination/fesm5/ngx-bootstrap-pagination.js","../node_modules/ngx-bootstrap/popover/fesm5/ngx-bootstrap-popover.js","../node_modules/ngx-bootstrap/progressbar/fesm5/ngx-bootstrap-progressbar.js","../node_modules/ngx-bootstrap/tooltip/fesm5/ngx-bootstrap-tooltip.js","../src/app/views/base/carousels.component.html","../src/app/views/base/navbars/navbars.component.html","../src/app/views/base/base-routing.module.ts","../src/app/views/base/base.module.ts","../src/app/views/base/carousels.component.ts","../src/app/views/base/navbars/navbars.component.css","../src/app/views/base/navbars/navbars.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAC8C;;AAErH;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,IAAI,iEAAK,EAAE,kCAAkC;AAC7C,IAAI,mEAAO,4BAA4B,iEAAK,EAAE,qCAAqC;AACnF;AACA,WAAW,EAAE;AACb;AACA,IAAI,iEAAK,EAAE,qCAAqC;AAChD,IAAI,mEAAO,4BAA4B,iEAAK,EAAE,kCAAkC;AAChF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,mBAAmB,EAAE;AACtD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,uCAAuC,EAAE;AACtE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,oEAAgB;AAChC,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,sBAAsB,OAAO,yDAAW,uBAAuB,GAAG,OAAO,yDAAW,yBAAyB,GAAG,OAAO,yDAAW,iCAAiC;AACnK,uBAAuB,OAAO,yDAAW,+BAA+B;AACxE,sBAAsB,OAAO,yDAAW,6BAA6B;AACrE,wBAAwB,OAAO,yDAAW,+BAA+B;AACzE,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD,WAAW,EAsFV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE6C;AAC7C;;;;;;;;;;;;;ACrYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwI;AACrF;AACJ;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EAKV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,uBAAuB,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,2CAA2C,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4IAA4I,wCAAwC,oBAAoB,gBAAgB,4DAA4D,uBAAuB,8FAA8F,0CAA0C,oBAAoB,gBAAgB,4DAA4D,mBAAmB;AACtiB;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AACD,WAAW,EAgHV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAKV;AACD,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,4BAA4B,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,2CAA2C,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8ZAA8Z,sDAAsD,2YAA2Y,sDAAsD,waAAwa,qDAAqD,+XAA+X,kDAAkD,gYAAgY,kDAAkD,qGAAqG,aAAa,sDAAsD,mBAAmB,0DAA0D,uBAAuB,uDAAuD,oBAAoB,sDAAsD,mBAAmB;AACrnF;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,kCAAkC,OAAO,mDAAK,EAAE;AAChD,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AACD,WAAW,EAyIV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEgK;AAChK;;;;;;;;;;;;;ACtnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4J;AACpF;AACb;AACI;AAClC;AACkB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EA6BV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,qBAAqB;AACrB,uIAAuI,SAAS;AAChJ,2DAA2D,4BAA4B,OAAO,oCAAoC,0BAA0B,OAAO,6BAA6B,4BAA4B,OAAO,mCAAmC,0BAA0B,OAAO,iCAAiC,4BAA4B,OAAO,0EAA0E,wBAAwB,OAAO;AACpd,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;AACD,WAAW,EAOV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB,2BAA2B,kDAAK;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,yEAAa;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,qBAAqB,EAAE;AAChD,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU,gDAAgD;AACnF;AACA;AACA,mDAAmD;AACnD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,qFAAsB,EAAE;AACxC,SAAS,OAAO,4EAAkB;AAClC,MAAM;AACN;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mBAAmB,OAAO,mDAAK,EAAE;AACjC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;AACD,WAAW,EAiGV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,qFAAsB,EAAE,4EAAkB;AACjF;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqF;AACrF;;;;;;;;;;;;;ACthBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiH;AACrE;AACG;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0PAA0P,cAAc;AACxQ,2CAA2C,oBAAoB,sBAAsB,OAAO;AAC5F,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,yDAAW,uBAAuB,GAAG,OAAO,mDAAK,EAAE;AACzE,oBAAoB,OAAO,yDAAW,6BAA6B;AACnE;AACA;AACA,CAAC;AACD,WAAW,EAuBV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,2CAA2C,OAAO,kDAAI,EAAE,GAAG;AACpE,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,yDAAW,4BAA4B;AACrE,oBAAoB,OAAO,yDAAW,iCAAiC;AACvE;AACA;AACA,CAAC;AACD,WAAW,EAsCV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEoF;AACpF;;;;;;;;;;;;;ACndA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0K;AAC3F;AAChC;AACyB;AACT;AAClC;AACkB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;AACD,WAAW,EA0BV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mDAAmD,uBAAuB,6BAA6B,OAAO,oCAAoC,0BAA0B,OAAO,gCAAgC,wBAAwB,OAAO,4DAA4D,oBAAoB,OAAO,2EAA2E,wBAAwB,OAAO;AACnb,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN;AACA,CAAC;AACD,WAAW,EAWV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,sBAAsB,2CAA2C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,qBAAqB,EAAE;AAChD,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,kDAAK;AAC3C,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,yEAAa;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,qFAAsB,EAAE;AACxC,SAAS,sBAAsB;AAC/B,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,4EAAkB;AAClC,MAAM;AACN;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,mDAAK,0BAA0B;AAC7D,sBAAsB,OAAO,mDAAK,+BAA+B;AACjE,mBAAmB,OAAO,mDAAK,4BAA4B;AAC3D,mBAAmB,OAAO,mDAAK,4BAA4B;AAC3D,yBAAyB,OAAO,mDAAK,kCAAkC;AACvE,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,uBAAuB,OAAO,mDAAK,2BAA2B;AAC9D,2BAA2B,OAAO,mDAAK,6BAA6B;AACpE,8BAA8B,OAAO,mDAAK,gCAAgC;AAC1E,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,2BAA2B,OAAO,mDAAK,6BAA6B;AACpE,+BAA+B,OAAO,oDAAM,EAAE;AAC9C;AACA,IAAI,wDAAU;AACd,QAAQ,oEAAQ;AAChB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD,WAAW,EAkHV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,qFAAsB,EAAE,4EAAkB;AACjF;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqF;AACrF;;;;;;;;;;;;;ACnwBA;AAAe,8tBAA+pB,aAAa,mKAAmK,aAAa,kKAAkK,aAAa,yfAAyf,aAAa,kYAAkY,aAAa,gYAAgY,aAAa,swBAAswB,aAAa,kYAAkY,aAAa,gYAAgY,aAAa,4sBAA4sB,2GAA2G,aAAa,yFAAyF,OAAO,8BAA8B,YAAY,siCAAsiC,E;;;;;;;;;;;;ACA/1L;AAAe,ghFAAi9E,E;;;;;;;;;;;;;;;;;;;;ACAv7E;AACc;AAEvD,sDAAsD;AACtD,sDAAsD;AACtD,4DAA4D;AAC5D,wDAAwD;AACxD,oDAAoD;AACO;AAC3D,8DAA8D;AAC9D,kEAAkE;AAClE,4DAA4D;AAC5D,4DAA4D;AAC5D,4DAA4D;AACG;AAE/D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACJ,KAAK,EAAE,MAAM;SACd;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,OAAO;aACpB;YAED;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,uEAAkB;gBAC7B,IAAI,EAAE;oBACJ,KAAK,EAAE,WAAW;iBACnB;aACF;YAKD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,SAAS;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtD9B,UAAU;AACqC;AACF;AACJ;AAEzC,sDAAsD;AAEtD,qBAAqB;AACrB,sDAAsD;AAEtD,4DAA4D;AAC5D,wDAAwD;AAExD,iBAAiB;AAC+B;AAChD,mDAAmD;AAEnD,qBAAqB;AACmC;AACG;AAE3D,qBAAqB;AACmC;AACxD,6DAA6D;AAE7D,sBAAsB;AACoC;AAE1D,uBAAuB;AACqC;AAC5D,2DAA2D;AAE3D,oBAAoB;AACkC;AACtD,iEAAiE;AAEjE,qBAAqB;AACyC;AAC9D,2DAA2D;AAE3D,oBAAoB;AACkC;AACtD,2DAA2D;AAE3D,UAAU;AACqD;AAE/D,qBAAqB;AACqC;AA+B1D;IAAA;IAA0B,CAAC;IAAd,UAAU;QA7BtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,uEAAiB;gBACjB,uEAAgB,CAAC,OAAO,EAAE;gBAC1B,6DAAU;gBACV,qEAAc,CAAC,OAAO,EAAE;gBACxB,qEAAc,CAAC,OAAO,EAAE;gBACxB,yEAAgB,CAAC,OAAO,EAAE;gBAC1B,oEAAa,CAAC,OAAO,EAAE;gBACvB,4EAAiB,CAAC,OAAO,EAAE;gBAC3B,oEAAa,CAAC,OAAO,EAAE;aACxB;YACD,YAAY,EAAE;gBACZ,kBAAkB;gBAClB,kBAAkB;gBAClB,qBAAqB;gBACrB,mBAAmB;gBACnB,iBAAiB;gBACjB,uEAAkB;gBAClB,sBAAsB;gBACtB,wBAAwB;gBACxB,qBAAqB;gBACrB,qBAAqB;gBACrB,qBAAqB;gBACrB,4EAAgB;aACjB;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;AC/E4B;AACK;AAQxD;IAOE;QALA,eAAU,GAAmB,IAAI,CAAC;QAClC,WAAM,GAAU,EAAE,CAAC;QACnB,qBAAgB,GAAW,CAAC,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAG5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAOC;QANC,UAAU,CAAE;YACV,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,KAAK,EAAE,gCAA8B,IAAI,aAAU;aACpD,CAAC,CAAC;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,wCAAW,GAAX,UAAY,KAAc;QACxB,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IA/BU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,0OAAuC;YACvC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,qEAAc,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;aAC1E;SACF,CAAC;OACW,kBAAkB,CAiC9B;IAAD,yBAAC;CAAA;AAjC8B;;;;;;;;;;;;;ACT/B;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;;;;;;;ACAhH;AAC3C;AAOzD;IAoBE,0BACU,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QAnBrB,iBAAY,GAAY,IAAI,CAAC;IAoBjC,CAAC;IAnBL,sBAAI,yCAAW;aAGf;YACE,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,kCAAkC;gBAClC,IAAI,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,MAAM,EAAE;oBAC5F,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;iBACtE;aACF;YACD,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAXD,UAAgB,KAAK;YACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAAA;IAmBD,mCAAQ,GAAR,cAAY,CAAC;IAEb,6CAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC;;gBAPmB,uDAAS;;IALsC;QAAlE,+DAAS,CAAC,wEAAiB,EAAE,EAAE,IAAI,EAAE,wDAAU,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sDAA+B;IAhBtF,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,8OAAuC;;SAExC,CAAC;OACW,gBAAgB,CA6B5B;IAAD,uBAAC;CAAA;AA7B4B","file":"views-base-base-module.js","sourcesContent":["import { style, animate, AnimationBuilder } from '@angular/animations';\nimport { EventEmitter, Directive, ElementRef, Renderer2, Output, HostBinding, Input, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\n/** @type {?} */\nvar expandAnimation = [\n    style({ height: 0, visibility: 'hidden' }),\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: '*', visibility: 'visible' }))\n];\n/** @type {?} */\nvar collapseAnimation = [\n    style({ height: '*', visibility: 'visible' }),\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: 0, visibility: 'hidden' }))\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CollapseDirective = /** @class */ (function () {\n    function CollapseDirective(_el, _renderer, _builder) {\n        this._el = _el;\n        this._renderer = _renderer;\n        /**\n         * This event fires as soon as content collapses\n         */\n        this.collapsed = new EventEmitter();\n        /**\n         * This event fires when collapsing is started\n         */\n        this.collapses = new EventEmitter();\n        /**\n         * This event fires as soon as content becomes visible\n         */\n        this.expanded = new EventEmitter();\n        /**\n         * This event fires when expansion is started\n         */\n        this.expands = new EventEmitter();\n        // shown\n        this.isExpanded = true;\n        this.collapseNewValue = true;\n        // hidden\n        this.isCollapsed = false;\n        // stale state\n        this.isCollapse = true;\n        // animation state\n        this.isCollapsing = false;\n        /**\n         * turn on/off animation\n         */\n        this.isAnimated = false;\n        this._display = 'block';\n        this._stylesLoaded = false;\n        this._COLLAPSE_ACTION_NAME = 'collapse';\n        this._EXPAND_ACTION_NAME = 'expand';\n        this._factoryCollapseAnimation = _builder.build(collapseAnimation);\n        this._factoryExpandAnimation = _builder.build(expandAnimation);\n    }\n    Object.defineProperty(CollapseDirective.prototype, \"display\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this.isAnimated) {\n                this._renderer.setStyle(this._el.nativeElement, 'display', value);\n                return;\n            }\n            this._display = value;\n            if (value === 'none') {\n                this.hide();\n                return;\n            }\n            this.show();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CollapseDirective.prototype, \"collapse\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.isExpanded;\n        },\n        /** A flag indicating visibility of content (shown or hidden) */\n        set: /**\n         * A flag indicating visibility of content (shown or hidden)\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.collapseNewValue = value;\n            if (!this._player || this._isAnimationDone) {\n                this.isExpanded = value;\n                this.toggle();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CollapseDirective.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        this._stylesLoaded = true;\n        if (!this._player || !this._isAnimationDone) {\n            return;\n        }\n        this._player.reset();\n        this._renderer.setStyle(this._el.nativeElement, 'height', '*');\n    };\n    /** allows to manually toggle content visibility */\n    /**\n     * allows to manually toggle content visibility\n     * @return {?}\n     */\n    CollapseDirective.prototype.toggle = /**\n     * allows to manually toggle content visibility\n     * @return {?}\n     */\n    function () {\n        if (this.isExpanded) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    };\n    /** allows to manually hide content */\n    /**\n     * allows to manually hide content\n     * @return {?}\n     */\n    CollapseDirective.prototype.hide = /**\n     * allows to manually hide content\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.isCollapsing = true;\n        this.isExpanded = false;\n        this.isCollapsed = true;\n        this.isCollapsing = false;\n        this.collapses.emit(this);\n        this._isAnimationDone = false;\n        this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)((/**\n         * @return {?}\n         */\n        function () {\n            _this._isAnimationDone = true;\n            if (_this.collapseNewValue !== _this.isCollapsed && _this.isAnimated) {\n                _this.show();\n                return;\n            }\n            _this.collapsed.emit(_this);\n            _this._renderer.setStyle(_this._el.nativeElement, 'display', 'none');\n        }));\n    };\n    /** allows to manually show collapsed content */\n    /**\n     * allows to manually show collapsed content\n     * @return {?}\n     */\n    CollapseDirective.prototype.show = /**\n     * allows to manually show collapsed content\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\n        this.isCollapsing = true;\n        this.isExpanded = true;\n        this.isCollapsed = false;\n        this.isCollapsing = false;\n        this.expands.emit(this);\n        this._isAnimationDone = false;\n        this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)((/**\n         * @return {?}\n         */\n        function () {\n            _this._isAnimationDone = true;\n            if (_this.collapseNewValue !== _this.isCollapsed && _this.isAnimated) {\n                _this.hide();\n                return;\n            }\n            _this.expanded.emit(_this);\n            _this._renderer.removeStyle(_this._el.nativeElement, 'overflow');\n        }));\n    };\n    /**\n     * @param {?} isAnimated\n     * @param {?} action\n     * @return {?}\n     */\n    CollapseDirective.prototype.animationRun = /**\n     * @param {?} isAnimated\n     * @param {?} action\n     * @return {?}\n     */\n    function (isAnimated, action) {\n        var _this = this;\n        if (!isAnimated || !this._stylesLoaded) {\n            return (/**\n             * @param {?} callback\n             * @return {?}\n             */\n            function (callback) { return callback(); });\n        }\n        this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\n        this._renderer.addClass(this._el.nativeElement, 'collapse');\n        /** @type {?} */\n        var factoryAnimation = (action === this._EXPAND_ACTION_NAME)\n            ? this._factoryExpandAnimation\n            : this._factoryCollapseAnimation;\n        if (this._player) {\n            this._player.destroy();\n        }\n        this._player = factoryAnimation.create(this._el.nativeElement);\n        this._player.play();\n        return (/**\n         * @param {?} callback\n         * @return {?}\n         */\n        function (callback) { return _this._player.onDone(callback); });\n    };\n    CollapseDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[collapse]',\n                    exportAs: 'bs-collapse',\n                    host: {\n                        '[class.collapse]': 'true'\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    CollapseDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: AnimationBuilder }\n    ]; };\n    CollapseDirective.propDecorators = {\n        collapsed: [{ type: Output }],\n        collapses: [{ type: Output }],\n        expanded: [{ type: Output }],\n        expands: [{ type: Output }],\n        isExpanded: [{ type: HostBinding, args: ['class.in',] }, { type: HostBinding, args: ['class.show',] }, { type: HostBinding, args: ['attr.aria-expanded',] }],\n        isCollapsed: [{ type: HostBinding, args: ['attr.aria-hidden',] }],\n        isCollapse: [{ type: HostBinding, args: ['class.collapse',] }],\n        isCollapsing: [{ type: HostBinding, args: ['class.collapsing',] }],\n        display: [{ type: Input }],\n        isAnimated: [{ type: Input }],\n        collapse: [{ type: Input }]\n    };\n    return CollapseDirective;\n}());\nif (false) {\n    /**\n     * This event fires as soon as content collapses\n     * @type {?}\n     */\n    CollapseDirective.prototype.collapsed;\n    /**\n     * This event fires when collapsing is started\n     * @type {?}\n     */\n    CollapseDirective.prototype.collapses;\n    /**\n     * This event fires as soon as content becomes visible\n     * @type {?}\n     */\n    CollapseDirective.prototype.expanded;\n    /**\n     * This event fires when expansion is started\n     * @type {?}\n     */\n    CollapseDirective.prototype.expands;\n    /** @type {?} */\n    CollapseDirective.prototype.isExpanded;\n    /** @type {?} */\n    CollapseDirective.prototype.collapseNewValue;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapsed;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapse;\n    /** @type {?} */\n    CollapseDirective.prototype.isCollapsing;\n    /**\n     * turn on/off animation\n     * @type {?}\n     */\n    CollapseDirective.prototype.isAnimated;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._display;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._factoryCollapseAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._factoryExpandAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._isAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._player;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._stylesLoaded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._COLLAPSE_ACTION_NAME;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._EXPAND_ACTION_NAME;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._el;\n    /**\n     * @type {?}\n     * @private\n     */\n    CollapseDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CollapseModule = /** @class */ (function () {\n    function CollapseModule() {\n    }\n    /**\n     * @return {?}\n     */\n    CollapseModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return { ngModule: CollapseModule, providers: [] };\n    };\n    CollapseModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [CollapseDirective],\n                    exports: [CollapseDirective]\n                },] }\n    ];\n    return CollapseModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CollapseDirective, CollapseModule };\n//# sourceMappingURL=ngx-bootstrap-collapse.js.map\n","import { Injectable, forwardRef, EventEmitter, Component, ElementRef, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides default values for Pagination and pager components\n */\nvar PaginationConfig = /** @class */ (function () {\n    function PaginationConfig() {\n        this.main = {\n            maxSize: void 0,\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n    PaginationConfig.decorators = [\n        { type: Injectable }\n    ];\n    return PaginationConfig;\n}());\nif (false) {\n    /** @type {?} */\n    PaginationConfig.prototype.main;\n    /** @type {?} */\n    PaginationConfig.prototype.pager;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return PagerComponent; })),\n    multi: true\n};\nvar PagerComponent = /** @class */ (function () {\n    function PagerComponent(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    Object.defineProperty(PagerComponent.prototype, \"itemsPerPage\", {\n        /** maximum number of items per page. If value less than 1 will display all items on one page */\n        get: /**\n         * maximum number of items per page. If value less than 1 will display all items on one page\n         * @return {?}\n         */\n        function () {\n            return this._itemsPerPage;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._itemsPerPage = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"totalItems\", {\n        /** total number of items in all pages */\n        get: /**\n         * total number of items in all pages\n         * @return {?}\n         */\n        function () {\n            return this._totalItems;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._totalItems = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"totalPages\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._totalPages;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._totalPages = v;\n            this.numPages.emit(v);\n            if (this.inited) {\n                this.selectPage(this.page);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PagerComponent.prototype, \"page\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._page;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var _previous = this._page;\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\n            this.changeDetection.markForCheck();\n            if (_previous === this._page || typeof _previous === 'undefined') {\n                return;\n            }\n            this.pageChanged.emit({\n                page: this._page,\n                itemsPerPage: this.itemsPerPage\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    PagerComponent.prototype.configureOptions = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        this.config = Object.assign({}, config);\n    };\n    /**\n     * @return {?}\n     */\n    PagerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    PagerComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    PagerComponent.prototype.getText = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[key + \"Text\"] || ((/** @type {?} */ (this))).config[key + \"Text\"];\n    };\n    /**\n     * @return {?}\n     */\n    PagerComponent.prototype.noPrevious = /**\n     * @return {?}\n     */\n    function () {\n        return this.page === 1;\n    };\n    /**\n     * @return {?}\n     */\n    PagerComponent.prototype.noNext = /**\n     * @return {?}\n     */\n    function () {\n        return this.page === this.totalPages;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PagerComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PagerComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    PagerComponent.prototype.selectPage = /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    function (page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                var target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    };\n    // Create page object used in template\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    PagerComponent.prototype.makePage = \n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    function (num, text, active) {\n        return { text: text, number: num, active: active };\n    };\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    PagerComponent.prototype.getPages = /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    function (currentPage, totalPages) {\n        /** @type {?} */\n        var pages = [];\n        // Default page limits\n        /** @type {?} */\n        var startPage = 1;\n        /** @type {?} */\n        var endPage = totalPages;\n        /** @type {?} */\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (var num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            var page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    };\n    // base class\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    PagerComponent.prototype.calculateTotalPages = \n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    };\n    PagerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'pager',\n                    template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\",\n                    providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n                }] }\n    ];\n    /** @nocollapse */\n    PagerComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: PaginationConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    PagerComponent.propDecorators = {\n        align: [{ type: Input }],\n        maxSize: [{ type: Input }],\n        boundaryLinks: [{ type: Input }],\n        directionLinks: [{ type: Input }],\n        firstText: [{ type: Input }],\n        previousText: [{ type: Input }],\n        nextText: [{ type: Input }],\n        lastText: [{ type: Input }],\n        rotate: [{ type: Input }],\n        pageBtnClass: [{ type: Input }],\n        disabled: [{ type: Input }],\n        numPages: [{ type: Output }],\n        pageChanged: [{ type: Output }],\n        itemsPerPage: [{ type: Input }],\n        totalItems: [{ type: Input }]\n    };\n    return PagerComponent;\n}());\nif (false) {\n    /** @type {?} */\n    PagerComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PagerComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PagerComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PagerComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PagerComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PagerComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PagerComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PagerComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PagerComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PagerComponent.prototype.disabled;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PagerComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     * @type {?}\n     */\n    PagerComponent.prototype.pageChanged;\n    /** @type {?} */\n    PagerComponent.prototype.onChange;\n    /** @type {?} */\n    PagerComponent.prototype.onTouched;\n    /** @type {?} */\n    PagerComponent.prototype.classMap;\n    /** @type {?} */\n    PagerComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction PageChangedEvent() { }\nif (false) {\n    /** @type {?} */\n    PageChangedEvent.prototype.itemsPerPage;\n    /** @type {?} */\n    PageChangedEvent.prototype.page;\n}\n/** @type {?} */\nvar PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return PaginationComponent; })),\n    multi: true\n};\nvar PaginationComponent = /** @class */ (function () {\n    function PaginationComponent(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    Object.defineProperty(PaginationComponent.prototype, \"itemsPerPage\", {\n        /** maximum number of items per page. If value less than 1 will display all items on one page */\n        get: /**\n         * maximum number of items per page. If value less than 1 will display all items on one page\n         * @return {?}\n         */\n        function () {\n            return this._itemsPerPage;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._itemsPerPage = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"totalItems\", {\n        /** total number of items in all pages */\n        get: /**\n         * total number of items in all pages\n         * @return {?}\n         */\n        function () {\n            return this._totalItems;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._totalItems = v;\n            this.totalPages = this.calculateTotalPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"totalPages\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._totalPages;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._totalPages = v;\n            this.numPages.emit(v);\n            if (this.inited) {\n                this.selectPage(this.page);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PaginationComponent.prototype, \"page\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._page;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var _previous = this._page;\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\n            this.changeDetection.markForCheck();\n            if (_previous === this._page || typeof _previous === 'undefined') {\n                return;\n            }\n            this.pageChanged.emit({\n                page: this._page,\n                itemsPerPage: this.itemsPerPage\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    PaginationComponent.prototype.configureOptions = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        this.config = Object.assign({}, config);\n    };\n    /**\n     * @return {?}\n     */\n    PaginationComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    PaginationComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    PaginationComponent.prototype.getText = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[key + \"Text\"] || ((/** @type {?} */ (this))).config[key + \"Text\"];\n    };\n    /**\n     * @return {?}\n     */\n    PaginationComponent.prototype.noPrevious = /**\n     * @return {?}\n     */\n    function () {\n        return this.page === 1;\n    };\n    /**\n     * @return {?}\n     */\n    PaginationComponent.prototype.noNext = /**\n     * @return {?}\n     */\n    function () {\n        return this.page === this.totalPages;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PaginationComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PaginationComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    PaginationComponent.prototype.selectPage = /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    function (page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                var target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    };\n    // Create page object used in template\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    PaginationComponent.prototype.makePage = \n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    function (num, text, active) {\n        return { text: text, number: num, active: active };\n    };\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    PaginationComponent.prototype.getPages = /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    function (currentPage, totalPages) {\n        /** @type {?} */\n        var pages = [];\n        // Default page limits\n        /** @type {?} */\n        var startPage = 1;\n        /** @type {?} */\n        var endPage = totalPages;\n        /** @type {?} */\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (var num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            var page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    };\n    // base class\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    PaginationComponent.prototype.calculateTotalPages = \n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    };\n    PaginationComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'pagination',\n                    template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\",\n                    providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n                }] }\n    ];\n    /** @nocollapse */\n    PaginationComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: PaginationConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    PaginationComponent.propDecorators = {\n        align: [{ type: Input }],\n        maxSize: [{ type: Input }],\n        boundaryLinks: [{ type: Input }],\n        directionLinks: [{ type: Input }],\n        firstText: [{ type: Input }],\n        previousText: [{ type: Input }],\n        nextText: [{ type: Input }],\n        lastText: [{ type: Input }],\n        rotate: [{ type: Input }],\n        pageBtnClass: [{ type: Input }],\n        disabled: [{ type: Input }],\n        customPageTemplate: [{ type: Input }],\n        customNextTemplate: [{ type: Input }],\n        customPreviousTemplate: [{ type: Input }],\n        customFirstTemplate: [{ type: Input }],\n        customLastTemplate: [{ type: Input }],\n        numPages: [{ type: Output }],\n        pageChanged: [{ type: Output }],\n        itemsPerPage: [{ type: Input }],\n        totalItems: [{ type: Input }]\n    };\n    return PaginationComponent;\n}());\nif (false) {\n    /** @type {?} */\n    PaginationComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PaginationComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PaginationComponent.prototype.disabled;\n    /**\n     * custom template for page link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPageTemplate;\n    /**\n     * custom template for next link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customNextTemplate;\n    /**\n     * custom template for previous link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPreviousTemplate;\n    /**\n     * custom template for first link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customFirstTemplate;\n    /**\n     * custom template for last link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customLastTemplate;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PaginationComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageChanged;\n    /** @type {?} */\n    PaginationComponent.prototype.onChange;\n    /** @type {?} */\n    PaginationComponent.prototype.onTouched;\n    /** @type {?} */\n    PaginationComponent.prototype.classMap;\n    /** @type {?} */\n    PaginationComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PaginationModule = /** @class */ (function () {\n    function PaginationModule() {\n    }\n    /**\n     * @return {?}\n     */\n    PaginationModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return { ngModule: PaginationModule, providers: [PaginationConfig] };\n    };\n    PaginationModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [PagerComponent, PaginationComponent],\n                    exports: [PagerComponent, PaginationComponent]\n                },] }\n    ];\n    return PaginationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule, PAGER_CONTROL_VALUE_ACCESSOR as ɵa, PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb };\n//# sourceMappingURL=ngx-bootstrap-pagination.js.map\n","import { Injectable, Component, ChangeDetectionStrategy, Input, Directive, ElementRef, Renderer2, ViewContainerRef, Output, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { isBs3, parseTriggers } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\nvar PopoverConfig = /** @class */ (function () {\n    function PopoverConfig() {\n        /**\n         * sets disable adaptive position\n         */\n        this.adaptivePosition = true;\n        /**\n         * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n         */\n        this.placement = 'top';\n        /**\n         * Specifies events that should trigger. Supports a space separated list of\n         * event names.\n         */\n        this.triggers = 'click';\n        this.outsideClick = false;\n        /**\n         * delay before showing the tooltip\n         */\n        this.delay = 0;\n    }\n    PopoverConfig.decorators = [\n        { type: Injectable }\n    ];\n    return PopoverConfig;\n}());\nif (false) {\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    PopoverConfig.prototype.adaptivePosition;\n    /**\n     * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n     * @type {?}\n     */\n    PopoverConfig.prototype.placement;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     */\n    PopoverConfig.prototype.triggers;\n    /** @type {?} */\n    PopoverConfig.prototype.outsideClick;\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * @type {?}\n     */\n    PopoverConfig.prototype.container;\n    /**\n     * delay before showing the tooltip\n     * @type {?}\n     */\n    PopoverConfig.prototype.delay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PopoverContainerComponent = /** @class */ (function () {\n    function PopoverContainerComponent(config) {\n        Object.assign(this, config);\n    }\n    Object.defineProperty(PopoverContainerComponent.prototype, \"isBs3\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PopoverContainerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'popover-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // tslint:disable-next-line\n                    host: {\n                        '[class]': '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[class.show]': '!isBs3',\n                        '[class.bs3]': 'isBs3',\n                        role: 'tooltip',\n                        style: 'display:block;'\n                    },\n                    template: \"<div class=\\\"popover-arrow arrow\\\"></div>\\n<h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3>\\n<div class=\\\"popover-content popover-body\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                    styles: [\"\\n    :host.bs3.popover-top {\\n      margin-bottom: 10px;\\n    }\\n    :host.bs3.popover.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.popover.top {\\n      margin-bottom: 10px;\\n    }\\n    :host.popover.bottom>.arrow {\\n      margin-left: -4px;\\n    }\\n    :host.bs3.bs-popover-left {\\n      margin-right: .5rem;\\n    }\\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\\n      margin: .3rem 0;\\n    }\\n    \"]\n                }] }\n    ];\n    /** @nocollapse */\n    PopoverContainerComponent.ctorParameters = function () { return [\n        { type: PopoverConfig }\n    ]; };\n    PopoverContainerComponent.propDecorators = {\n        placement: [{ type: Input }],\n        title: [{ type: Input }]\n    };\n    return PopoverContainerComponent;\n}());\nif (false) {\n    /** @type {?} */\n    PopoverContainerComponent.prototype.placement;\n    /** @type {?} */\n    PopoverContainerComponent.prototype.title;\n    /** @type {?} */\n    PopoverContainerComponent.prototype.containerClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar PopoverDirective = /** @class */ (function () {\n    function PopoverDirective(_config, _elementRef, _renderer, _viewContainerRef, cis, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        /**\n         * Close popover on outside click\n         */\n        this.outsideClick = false;\n        /**\n         * Css class for popover container\n         */\n        this.containerClass = '';\n        this._isInited = false;\n        this._popover = cis\n            .createLoader(_elementRef, _viewContainerRef, _renderer)\n            .provide({ provide: PopoverConfig, useValue: _config });\n        Object.assign(this, _config);\n        this.onShown = this._popover.onShown;\n        this.onHidden = this._popover.onHidden;\n        // fix: no focus on button on Mac OS #1795\n        if (typeof window !== 'undefined') {\n            _elementRef.nativeElement.addEventListener('click', (/**\n             * @return {?}\n             */\n            function () {\n                try {\n                    _elementRef.nativeElement.focus();\n                }\n                catch (err) {\n                    return;\n                }\n            }));\n        }\n    }\n    Object.defineProperty(PopoverDirective.prototype, \"isOpen\", {\n        /**\n         * Returns whether or not the popover is currently being shown\n         */\n        get: /**\n         * Returns whether or not the popover is currently being shown\n         * @return {?}\n         */\n        function () {\n            return this._popover.isShown;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    PopoverDirective.prototype.show = /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n            return;\n        }\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition\n                }\n            }\n        });\n        /** @type {?} */\n        var showPopover = (/**\n         * @return {?}\n         */\n        function () {\n            if (_this._delayTimeoutId) {\n                _this._delayTimeoutId = undefined;\n            }\n            _this._popover\n                .attach(PopoverContainerComponent)\n                .to(_this.container)\n                .position({ attachment: _this.placement })\n                .show({\n                content: _this.popover,\n                context: _this.popoverContext,\n                placement: _this.placement,\n                title: _this.popoverTitle,\n                containerClass: _this.containerClass\n            });\n            if (!_this.adaptivePosition) {\n                _this._positionService.calcPosition();\n                _this._positionService.deletePositionElement(_this._popover._componentRef.location);\n            }\n            _this.isOpen = true;\n        });\n        /** @type {?} */\n        var cancelDelayedTooltipShowing = (/**\n         * @return {?}\n         */\n        function () {\n            if (_this._popoverCancelShowFn) {\n                _this._popoverCancelShowFn();\n            }\n        });\n        if (this.delay) {\n            /** @type {?} */\n            var _timer_1 = timer(this.delay).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                showPopover();\n                cancelDelayedTooltipShowing();\n            }));\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((/**\n                 * @param {?} trigger\n                 * @return {?}\n                 */\n                function (trigger) {\n                    _this._popoverCancelShowFn = _this._renderer.listen(_this._elementRef.nativeElement, trigger.close, (/**\n                     * @return {?}\n                     */\n                    function () {\n                        _timer_1.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    }));\n                }));\n            }\n        }\n        else {\n            showPopover();\n        }\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    PopoverDirective.prototype.hide = /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    function () {\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (this.isOpen) {\n            this._popover.hide();\n            this.isOpen = false;\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    PopoverDirective.prototype.toggle = /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n    function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    /**\n     * @return {?}\n     */\n    PopoverDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        this._popover.listen({\n            triggers: this.triggers,\n            outsideClick: this.outsideClick,\n            show: (/**\n             * @return {?}\n             */\n            function () { return _this.show(); })\n        });\n    };\n    /**\n     * @return {?}\n     */\n    PopoverDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._popover.dispose();\n    };\n    PopoverDirective.decorators = [\n        { type: Directive, args: [{ selector: '[popover]', exportAs: 'bs-popover' },] }\n    ];\n    /** @nocollapse */\n    PopoverDirective.ctorParameters = function () { return [\n        { type: PopoverConfig },\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: ViewContainerRef },\n        { type: ComponentLoaderFactory },\n        { type: PositioningService }\n    ]; };\n    PopoverDirective.propDecorators = {\n        adaptivePosition: [{ type: Input }],\n        popover: [{ type: Input }],\n        popoverContext: [{ type: Input }],\n        popoverTitle: [{ type: Input }],\n        placement: [{ type: Input }],\n        outsideClick: [{ type: Input }],\n        triggers: [{ type: Input }],\n        container: [{ type: Input }],\n        containerClass: [{ type: Input }],\n        isOpen: [{ type: Input }],\n        delay: [{ type: Input }],\n        onShown: [{ type: Output }],\n        onHidden: [{ type: Output }]\n    };\n    return PopoverDirective;\n}());\nif (false) {\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    PopoverDirective.prototype.adaptivePosition;\n    /**\n     * Content to be displayed as popover.\n     * @type {?}\n     */\n    PopoverDirective.prototype.popover;\n    /**\n     * Context to be used if popover is a template.\n     * @type {?}\n     */\n    PopoverDirective.prototype.popoverContext;\n    /**\n     * Title of a popover.\n     * @type {?}\n     */\n    PopoverDirective.prototype.popoverTitle;\n    /**\n     * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     * @type {?}\n     */\n    PopoverDirective.prototype.placement;\n    /**\n     * Close popover on outside click\n     * @type {?}\n     */\n    PopoverDirective.prototype.outsideClick;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     */\n    PopoverDirective.prototype.triggers;\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * @type {?}\n     */\n    PopoverDirective.prototype.container;\n    /**\n     * Css class for popover container\n     * @type {?}\n     */\n    PopoverDirective.prototype.containerClass;\n    /**\n     * Delay before showing the tooltip\n     * @type {?}\n     */\n    PopoverDirective.prototype.delay;\n    /**\n     * Emits an event when the popover is shown\n     * @type {?}\n     */\n    PopoverDirective.prototype.onShown;\n    /**\n     * Emits an event when the popover is hidden\n     * @type {?}\n     */\n    PopoverDirective.prototype.onHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopoverDirective.prototype._popoverCancelShowFn;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PopoverDirective.prototype._delayTimeoutId;\n    /**\n     * @type {?}\n     * @private\n     */\n    PopoverDirective.prototype._popover;\n    /**\n     * @type {?}\n     * @private\n     */\n    PopoverDirective.prototype._isInited;\n    /**\n     * @type {?}\n     * @private\n     */\n    PopoverDirective.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PopoverDirective.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    PopoverDirective.prototype._positionService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PopoverModule = /** @class */ (function () {\n    function PopoverModule() {\n    }\n    /**\n     * @return {?}\n     */\n    PopoverModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: PopoverModule,\n            providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n        };\n    };\n    PopoverModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [PopoverDirective, PopoverContainerComponent],\n                    exports: [PopoverDirective],\n                    entryComponents: [PopoverContainerComponent]\n                },] }\n    ];\n    return PopoverModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { PopoverConfig, PopoverContainerComponent, PopoverDirective, PopoverModule };\n//# sourceMappingURL=ngx-bootstrap-popover.js.map\n","import { Injectable, Component, Input, HostBinding, ElementRef, Host, Renderer2, NgModule } from '@angular/core';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ProgressbarConfig = /** @class */ (function () {\n    function ProgressbarConfig() {\n        /**\n         * if `true` changing value of progress bar will be animated\n         */\n        this.animate = false;\n        /**\n         * maximum total value of progress element\n         */\n        this.max = 100;\n    }\n    ProgressbarConfig.decorators = [\n        { type: Injectable }\n    ];\n    return ProgressbarConfig;\n}());\nif (false) {\n    /**\n     * if `true` changing value of progress bar will be animated\n     * @type {?}\n     */\n    ProgressbarConfig.prototype.animate;\n    /**\n     * maximum total value of progress element\n     * @type {?}\n     */\n    ProgressbarConfig.prototype.max;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ProgressbarComponent = /** @class */ (function () {\n    function ProgressbarComponent(config) {\n        this.isStacked = false;\n        this.addClass = true;\n        /* tslint:disable-next-line:no-any */\n        this.bars = [];\n        this._max = 100;\n        Object.assign(this, config);\n    }\n    Object.defineProperty(ProgressbarComponent.prototype, \"animate\", {\n        /** if `true` changing value of progress bar will be animated */\n        set: /**\n         * if `true` changing value of progress bar will be animated\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._animate = value;\n            this.bars.forEach((/**\n             * @param {?} b\n             * @return {?}\n             */\n            function (b) {\n                b.animate = value;\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"striped\", {\n        /** If `true`, striped classes are applied */\n        set: /**\n         * If `true`, striped classes are applied\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._striped = value;\n            this.bars.forEach((/**\n             * @param {?} b\n             * @return {?}\n             */\n            function (b) {\n                b.striped = value;\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"value\", {\n        /** current value of progress bar. Could be a number or array of objects\n         * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n         */\n        set: /**\n         * current value of progress bar. Could be a number or array of objects\n         * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.isStacked = Array.isArray(value);\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"isBs3\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProgressbarComponent.prototype, \"max\", {\n        /** maximum total value of progress element */\n        get: /**\n         * maximum total value of progress element\n         * @return {?}\n         */\n        function () {\n            return this._max;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._max = v;\n            this.bars.forEach((/**\n             * @param {?} bar\n             * @return {?}\n             */\n            function (bar) {\n                bar.recalculatePercentage();\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} bar\n     * @return {?}\n     */\n    ProgressbarComponent.prototype.addBar = /**\n     * @param {?} bar\n     * @return {?}\n     */\n    function (bar) {\n        bar.animate = this._animate;\n        bar.striped = this._striped;\n        this.bars.push(bar);\n    };\n    /**\n     * @param {?} bar\n     * @return {?}\n     */\n    ProgressbarComponent.prototype.removeBar = /**\n     * @param {?} bar\n     * @return {?}\n     */\n    function (bar) {\n        this.bars.splice(this.bars.indexOf(bar), 1);\n    };\n    ProgressbarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'progressbar',\n                    template: \"<bar [type]=\\\"type\\\" [value]=\\\"_value\\\" *ngIf=\\\"!isStacked\\\">\\n  <ng-content></ng-content>\\n</bar>\\n<ng-template [ngIf]=\\\"isStacked\\\">\\n  <bar *ngFor=\\\"let item of _value\\\" [type]=\\\"item.type\\\" [value]=\\\"item.value\\\">{{ item.label }}</bar>\\n</ng-template>\\n\",\n                    styles: [\"\\n    :host {\\n      width: 100%;\\n      display: flex;\\n    }\\n  \"]\n                }] }\n    ];\n    /** @nocollapse */\n    ProgressbarComponent.ctorParameters = function () { return [\n        { type: ProgressbarConfig }\n    ]; };\n    ProgressbarComponent.propDecorators = {\n        animate: [{ type: Input }],\n        striped: [{ type: Input }],\n        type: [{ type: Input }],\n        value: [{ type: Input }],\n        max: [{ type: HostBinding, args: ['attr.max',] }, { type: Input }],\n        addClass: [{ type: HostBinding, args: ['class.progress',] }]\n    };\n    return ProgressbarComponent;\n}());\nif (false) {\n    /**\n     * provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger`\n     * @type {?}\n     */\n    ProgressbarComponent.prototype.type;\n    /** @type {?} */\n    ProgressbarComponent.prototype.isStacked;\n    /** @type {?} */\n    ProgressbarComponent.prototype._striped;\n    /** @type {?} */\n    ProgressbarComponent.prototype._animate;\n    /** @type {?} */\n    ProgressbarComponent.prototype._value;\n    /** @type {?} */\n    ProgressbarComponent.prototype.addClass;\n    /** @type {?} */\n    ProgressbarComponent.prototype.bars;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ProgressbarComponent.prototype._max;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: number pipe\n// todo: use query from progress?\nvar BarComponent = /** @class */ (function () {\n    function BarComponent(el, progress, renderer) {\n        this.el = el;\n        this.renderer = renderer;\n        this.addClass = true;\n        this.percent = 0;\n        this.progress = progress;\n    }\n    Object.defineProperty(BarComponent.prototype, \"type\", {\n        /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n        get: /**\n         * provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger`\n         * @return {?}\n         */\n        function () {\n            return this._type;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._type = v;\n            this.applyTypeClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"value\", {\n        /** current value of progress bar */\n        get: /**\n         * current value of progress bar\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            if (!v && v !== 0) {\n                return;\n            }\n            this._value = v;\n            this.recalculatePercentage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            this.recalculatePercentage();\n            return this.percent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BarComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.progress.addBar(this);\n    };\n    /**\n     * @return {?}\n     */\n    BarComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.progress.removeBar(this);\n    };\n    /**\n     * @return {?}\n     */\n    BarComponent.prototype.recalculatePercentage = /**\n     * @return {?}\n     */\n    function () {\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n        /** @type {?} */\n        var totalPercentage = this.progress.bars\n            .reduce((/**\n         * @param {?} total\n         * @param {?} bar\n         * @return {?}\n         */\n        function (total, bar) {\n            return total + bar.percent;\n        }), 0);\n        if (totalPercentage > 100) {\n            this.percent -= totalPercentage - 100;\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    BarComponent.prototype.applyTypeClasses = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._prevType) {\n            /** @type {?} */\n            var barTypeClass = \"progress-bar-\" + this._prevType;\n            /** @type {?} */\n            var bgClass = \"bg-\" + this._prevType;\n            this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n            this.renderer.removeClass(this.el.nativeElement, bgClass);\n            this._prevType = null;\n        }\n        if (this._type) {\n            /** @type {?} */\n            var barTypeClass = \"progress-bar-\" + this._type;\n            /** @type {?} */\n            var bgClass = \"bg-\" + this._type;\n            this.renderer.addClass(this.el.nativeElement, barTypeClass);\n            this.renderer.addClass(this.el.nativeElement, bgClass);\n            this._prevType = this._type;\n        }\n    };\n    BarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bar',\n                    template: \"<ng-content></ng-content>\\n\",\n                    host: {\n                        role: 'progressbar',\n                        'aria-valuemin': '0',\n                        '[class.progress-bar-animated]': '!isBs3 && animate',\n                        '[class.progress-bar-striped]': 'striped',\n                        '[class.active]': 'isBs3 && animate',\n                        '[attr.aria-valuenow]': 'value',\n                        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n                        '[attr.aria-valuemax]': 'max',\n                        '[style.height.%]': '\"100\"'\n                    }\n                }] }\n    ];\n    /** @nocollapse */\n    BarComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ProgressbarComponent, decorators: [{ type: Host }] },\n        { type: Renderer2 }\n    ]; };\n    BarComponent.propDecorators = {\n        type: [{ type: Input }],\n        value: [{ type: Input }],\n        setBarWidth: [{ type: HostBinding, args: ['style.width.%',] }],\n        addClass: [{ type: HostBinding, args: ['class.progress-bar',] }]\n    };\n    return BarComponent;\n}());\nif (false) {\n    /** @type {?} */\n    BarComponent.prototype.max;\n    /** @type {?} */\n    BarComponent.prototype.addClass;\n    /** @type {?} */\n    BarComponent.prototype.striped;\n    /** @type {?} */\n    BarComponent.prototype.animate;\n    /** @type {?} */\n    BarComponent.prototype.percent;\n    /** @type {?} */\n    BarComponent.prototype.progress;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BarComponent.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BarComponent.prototype._type;\n    /**\n     * @type {?}\n     * @private\n     */\n    BarComponent.prototype._prevType;\n    /**\n     * @type {?}\n     * @private\n     */\n    BarComponent.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    BarComponent.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ProgressbarModule = /** @class */ (function () {\n    function ProgressbarModule() {\n    }\n    /**\n     * @return {?}\n     */\n    ProgressbarModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n    };\n    ProgressbarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [BarComponent, ProgressbarComponent],\n                    exports: [BarComponent, ProgressbarComponent]\n                },] }\n    ];\n    return ProgressbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BarComponent, ProgressbarComponent, ProgressbarConfig, ProgressbarModule };\n//# sourceMappingURL=ngx-bootstrap-progressbar.js.map\n","import { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, ViewContainerRef, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport { isBs3, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport { __decorate, __metadata } from 'tslib';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default values provider for tooltip\n */\nvar TooltipConfig = /** @class */ (function () {\n    function TooltipConfig() {\n        /**\n         * sets disable adaptive position\n         */\n        this.adaptivePosition = true;\n        /**\n         * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n         */\n        this.placement = 'top';\n        /**\n         * array of event names which triggers tooltip opening\n         */\n        this.triggers = 'hover focus';\n        /**\n         * delay before showing the tooltip\n         */\n        this.delay = 0;\n    }\n    TooltipConfig.decorators = [\n        { type: Injectable }\n    ];\n    return TooltipConfig;\n}());\nif (false) {\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipConfig.prototype.adaptivePosition;\n    /**\n     * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\n     * @type {?}\n     */\n    TooltipConfig.prototype.placement;\n    /**\n     * array of event names which triggers tooltip opening\n     * @type {?}\n     */\n    TooltipConfig.prototype.triggers;\n    /**\n     * a selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipConfig.prototype.container;\n    /**\n     * delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipConfig.prototype.delay;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TooltipContainerComponent = /** @class */ (function () {\n    function TooltipContainerComponent(config) {\n        Object.assign(this, config);\n    }\n    Object.defineProperty(TooltipContainerComponent.prototype, \"isBs3\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TooltipContainerComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        this.classMap = { in: false, fade: false };\n        this.classMap[this.placement] = true;\n        this.classMap[\"tooltip-\" + this.placement] = true;\n        this.classMap.in = true;\n        if (this.animation) {\n            this.classMap.fade = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    };\n    TooltipContainerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bs-tooltip-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // tslint:disable-next-line\n                    host: {\n                        '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[class.show]': '!isBs3',\n                        '[class.bs3]': 'isBs3',\n                        '[attr.id]': 'this.id',\n                        role: 'tooltip'\n                    },\n                    template: \"\\n    <div class=\\\"tooltip-arrow arrow\\\"></div>\\n    <div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\\n    \",\n                    styles: [\"\\n    :host.tooltip {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    :host.bs3.tooltip.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.tooltip.bottom {\\n      margin-top: 0px;\\n    }\\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\\n      margin: 0px;\\n    }\\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\\n      margin: .3rem 0;\\n    }\\n  \"]\n                }] }\n    ];\n    /** @nocollapse */\n    TooltipContainerComponent.ctorParameters = function () { return [\n        { type: TooltipConfig }\n    ]; };\n    return TooltipContainerComponent;\n}());\nif (false) {\n    /** @type {?} */\n    TooltipContainerComponent.prototype.classMap;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.placement;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.containerClass;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.animation;\n    /** @type {?} */\n    TooltipContainerComponent.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar id = 0;\nvar TooltipDirective = /** @class */ (function () {\n    function TooltipDirective(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        this.tooltipId = id++;\n        /**\n         * Fired when tooltip content changes\n         */\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange = new EventEmitter();\n        /**\n         * Css class for tooltip container\n         */\n        this.containerClass = '';\n        /**\n         * @deprecated - removed, will be added to configuration\n         */\n        this.tooltipAnimation = true;\n        /**\n         * @deprecated\n         */\n        this.tooltipFadeDuration = 150;\n        /**\n         * @deprecated\n         */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    Object.defineProperty(TooltipDirective.prototype, \"isOpen\", {\n        /**\n         * Returns whether or not the tooltip is currently being shown\n         */\n        get: /**\n         * Returns whether or not the tooltip is currently being shown\n         * @return {?}\n         */\n        function () {\n            return this._tooltip.isShown;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"htmlContent\", {\n        /** @deprecated - please use `tooltip` instead */\n        set: /**\n         * @deprecated - please use `tooltip` instead\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n            this.tooltip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_placement\", {\n        /** @deprecated - please use `placement` instead */\n        set: /**\n         * @deprecated - please use `placement` instead\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n            this.placement = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_isOpen\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n            return this.isOpen;\n        },\n        /** @deprecated - please use `isOpen` instead */\n        set: /**\n         * @deprecated - please use `isOpen` instead\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n            this.isOpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_enable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n            return this.isDisabled;\n        },\n        /** @deprecated - please use `isDisabled` instead */\n        set: /**\n         * @deprecated - please use `isDisabled` instead\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n            this.isDisabled = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_appendToBody\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n            return this.container === 'body';\n        },\n        /** @deprecated - please use `container=\"body\"` instead */\n        set: /**\n         * @deprecated - please use `container=\"body\"` instead\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n            this.container = value ? 'body' : this.container;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_popupClass\", {\n        /** @deprecated - will replaced with customClass */\n        set: /**\n         * @deprecated - will replaced with customClass\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipClass deprecated');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipContext\", {\n        /** @deprecated - removed */\n        set: /**\n         * @deprecated - removed\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipContext deprecated');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipPopupDelay\", {\n        /** @deprecated */\n        set: /**\n         * @deprecated\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n            this.delay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipTrigger\", {\n        /** @deprecated -  please use `triggers` instead */\n        get: /**\n         * @deprecated -  please use `triggers` instead\n         * @return {?}\n         */\n        function () {\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n            return this.triggers;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n            this.triggers = (value || '').toString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    TooltipDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: (/**\n             * @return {?}\n             */\n            function () { return _this.show(); })\n        });\n        /* tslint:disable-next-line:no-any */\n        this.tooltipChange.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!value) {\n                _this._tooltip.hide();\n            }\n        }));\n        this.onShown.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.setAriaDescribedBy();\n        }));\n        this.onHidden.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.setAriaDescribedBy();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    TooltipDirective.prototype.setAriaDescribedBy = /**\n     * @return {?}\n     */\n    function () {\n        this._ariaDescribedby = this.isOpen ? \"tooltip-\" + this.tooltipId : null;\n        if (this._ariaDescribedby) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n        }\n        else {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        }\n    };\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    TooltipDirective.prototype.toggle = /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    TooltipDirective.prototype.show = /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition\n                }\n            }\n        });\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        /** @type {?} */\n        var showTooltip = (/**\n         * @return {?}\n         */\n        function () {\n            if (_this._delayTimeoutId) {\n                _this._delayTimeoutId = undefined;\n            }\n            _this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(_this.container)\n                .position({ attachment: _this.placement })\n                .show({\n                content: _this.tooltip,\n                placement: _this.placement,\n                containerClass: _this.containerClass,\n                id: \"tooltip-\" + _this.tooltipId\n            });\n        });\n        /** @type {?} */\n        var cancelDelayedTooltipShowing = (/**\n         * @return {?}\n         */\n        function () {\n            if (_this._tooltipCancelShowFn) {\n                _this._tooltipCancelShowFn();\n            }\n        });\n        if (this.delay) {\n            if (this._delaySubscription) {\n                this._delaySubscription.unsubscribe();\n            }\n            this._delaySubscription = timer(this.delay).subscribe((/**\n             * @return {?}\n             */\n            function () {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            }));\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((/**\n                 * @param {?} trigger\n                 * @return {?}\n                 */\n                function (trigger) {\n                    _this._tooltipCancelShowFn = _this._renderer.listen(_this._elementRef.nativeElement, trigger.close, (/**\n                     * @return {?}\n                     */\n                    function () {\n                        _this._delaySubscription.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    }));\n                }));\n            }\n        }\n        else {\n            showTooltip();\n        }\n    };\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    TooltipDirective.prototype.hide = /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        this._tooltip.instance.classMap.in = false;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this._tooltip.hide();\n        }), this.tooltipFadeDuration);\n    };\n    /**\n     * @return {?}\n     */\n    TooltipDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tooltip.dispose();\n        this.tooltipChange.unsubscribe();\n        if (this._delaySubscription) {\n            this._delaySubscription.unsubscribe();\n        }\n        this.onShown.unsubscribe();\n        this.onHidden.unsubscribe();\n    };\n    TooltipDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[tooltip], [tooltipHtml]',\n                    exportAs: 'bs-tooltip'\n                },] }\n    ];\n    /** @nocollapse */\n    TooltipDirective.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: ComponentLoaderFactory },\n        { type: TooltipConfig },\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: PositioningService }\n    ]; };\n    TooltipDirective.propDecorators = {\n        adaptivePosition: [{ type: Input }],\n        tooltip: [{ type: Input }],\n        tooltipChange: [{ type: Output }],\n        placement: [{ type: Input }],\n        triggers: [{ type: Input }],\n        container: [{ type: Input }],\n        containerClass: [{ type: Input }],\n        isOpen: [{ type: Input }],\n        isDisabled: [{ type: Input }],\n        delay: [{ type: Input }],\n        onShown: [{ type: Output }],\n        onHidden: [{ type: Output }],\n        htmlContent: [{ type: Input, args: ['tooltipHtml',] }],\n        _placement: [{ type: Input, args: ['tooltipPlacement',] }],\n        _isOpen: [{ type: Input, args: ['tooltipIsOpen',] }],\n        _enable: [{ type: Input, args: ['tooltipEnable',] }],\n        _appendToBody: [{ type: Input, args: ['tooltipAppendToBody',] }],\n        tooltipAnimation: [{ type: Input }],\n        _popupClass: [{ type: Input, args: ['tooltipClass',] }],\n        _tooltipContext: [{ type: Input, args: ['tooltipContext',] }],\n        _tooltipPopupDelay: [{ type: Input, args: ['tooltipPopupDelay',] }],\n        tooltipFadeDuration: [{ type: Input }],\n        _tooltipTrigger: [{ type: Input, args: ['tooltipTrigger',] }],\n        tooltipStateChanged: [{ type: Output }]\n    };\n    __decorate([\n        OnChange(),\n        __metadata(\"design:type\", Object)\n    ], TooltipDirective.prototype, \"tooltip\", void 0);\n    return TooltipDirective;\n}());\nif (false) {\n    /** @type {?} */\n    TooltipDirective.prototype.tooltipId;\n    /**\n     * sets disable adaptive position\n     * @type {?}\n     */\n    TooltipDirective.prototype.adaptivePosition;\n    /**\n     * Content to be displayed as tooltip.\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltip;\n    /**\n     * Fired when tooltip content changes\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipChange;\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     * @type {?}\n     */\n    TooltipDirective.prototype.placement;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     */\n    TooltipDirective.prototype.triggers;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     * @type {?}\n     */\n    TooltipDirective.prototype.container;\n    /**\n     * Css class for tooltip container\n     * @type {?}\n     */\n    TooltipDirective.prototype.containerClass;\n    /**\n     * Allows to disable tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.isDisabled;\n    /**\n     * Delay before showing the tooltip\n     * @type {?}\n     */\n    TooltipDirective.prototype.delay;\n    /**\n     * Emits an event when the tooltip is shown\n     * @type {?}\n     */\n    TooltipDirective.prototype.onShown;\n    /**\n     * Emits an event when the tooltip is hidden\n     * @type {?}\n     */\n    TooltipDirective.prototype.onHidden;\n    /**\n     * @deprecated - removed, will be added to configuration\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipAnimation;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipFadeDuration;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    TooltipDirective.prototype.tooltipStateChanged;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._delayTimeoutId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TooltipDirective.prototype._tooltipCancelShowFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._tooltip;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._delaySubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipDirective.prototype._positionService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TooltipModule = /** @class */ (function () {\n    function TooltipModule() {\n    }\n    /**\n     * @return {?}\n     */\n    TooltipModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: TooltipModule,\n            providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n        };\n    };\n    TooltipModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [TooltipDirective, TooltipContainerComponent],\n                    exports: [TooltipDirective],\n                    entryComponents: [TooltipContainerComponent]\n                },] }\n    ];\n    return TooltipModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\n//# sourceMappingURL=ngx-bootstrap-tooltip.js.map\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Bootstrap Carousel\\r\\n          <div class=\\\"card-header-actions\\\">\\r\\n            <a href=\\\"https://valor-software.com/ngx-bootstrap/#/carousel\\\" target=\\\"_blank\\\">\\r\\n              <small className=\\\"text-muted\\\">docs</small>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"false\\\">\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1/900/500\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1026/900/500\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1031/900/500\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> optional captions</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"false\\\">\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1032/900/500\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>First slide label</h3>\\r\\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1036/900/500\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Second slide label</h3>\\r\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1043/900/500\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Third slide label</h3>\\r\\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> configuring defaults</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"false\\\">\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1054/900/500\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>First slide label</h3>\\r\\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1059/900/500\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Second slide label</h3>\\r\\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n            <slide>\\r\\n              <img src=\\\"https://picsum.photos/id/1065/900/500\\\" alt=\\\"Third slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                <h3>Third slide label</h3>\\r\\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Carousel\\r\\n          <small> dynamic slides</small>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <carousel [interval]=\\\"myInterval\\\" [noWrap]=\\\"noWrapSlides\\\" [(activeSlide)]=\\\"activeSlideIndex\\\">\\r\\n            <slide *ngFor=\\\"let slide of slides; let index=index\\\">\\r\\n              <img [src]=\\\"slide.image\\\" alt=\\\"image slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n\\r\\n              <div class=\\\"carousel-caption\\\">\\r\\n                <h4>Slide {{index}}</h4>\\r\\n                <p>{{slide.text}}</p>\\r\\n              </div>\\r\\n            </slide>\\r\\n          </carousel>\\r\\n          <br/>\\r\\n          <div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"addSlide()\\\">Add Slide\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"removeSlide()\\\">Remove Current\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\"\\r\\n                    (click)=\\\"removeSlide(2)\\\">Remove #3\\r\\n            </button>\\r\\n          </div>\\r\\n          <div>\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label><input type=\\\"checkbox\\\" [(ngModel)]=\\\"noWrapSlides\\\">Disable Slide Looping</label>\\r\\n            </div>\\r\\n\\r\\n            <span>Interval, in milliseconds (Enter a negative number or 0 to stop the interval.): </span>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"myInterval\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Bootstrap Navbar\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n            <button aria-controls=\\\"navbarSupportedContent\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" class=\\\"navbar-toggler\\\" type=\\\"button\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n\\r\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\" [collapse]=\\\"isCollapsed\\\" [isAnimated]=\\\"true\\\">\\r\\n              <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                <li class=\\\"nav-item active\\\">\\r\\n                  <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item dropdown\\\" dropdown>\\r\\n                  <a id=\\\"link-dropdown\\\" class=\\\"nav-link dropdown-toggle\\\" href dropdownToggle (click)=\\\"false\\\" aria-controls=\\\"your-dropdown\\\">\\r\\n                    Dropdown\\r\\n                  </a>\\r\\n                  <div id=\\\"your-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"link-dropdown\\\" *dropdownMenu>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n              <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\r\\n                <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// import { CardsComponent } from './cards.component';\r\n// import { FormsComponent } from './forms.component';\r\n// import { SwitchesComponent } from './switches.component';\r\n// import { TablesComponent } from './tables.component';\r\n// import { TabsComponent } from './tabs.component';\r\nimport { CarouselsComponent } from './carousels.component';\r\n// import { CollapsesComponent } from './collapses.component';\r\n// import { PaginationsComponent } from './paginations.component';\r\n// import { PopoversComponent } from './popovers.component';\r\n// import { ProgressComponent } from './progress.component';\r\n// import { TooltipsComponent } from './tooltips.component';\r\nimport { NavbarsComponent } from './navbars/navbars.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Base'\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cards'\r\n      },\r\n      \r\n      {\r\n        path: 'carousels',\r\n        component: CarouselsComponent,\r\n        data: {\r\n          title: 'Carousels'\r\n        }\r\n      },\r\n      \r\n      \r\n      \r\n     \r\n      {\r\n        path: 'navbars',\r\n        component: NavbarsComponent,\r\n        data: {\r\n          title: 'Navbars'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BaseRoutingModule {}\r\n","// Angular\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { CardsComponent } from './cards.component';\r\n\r\n// // Forms Component\r\n// import { FormsComponent } from './forms.component';\r\n\r\n// import { SwitchesComponent } from './switches.component';\r\n// import { TablesComponent } from './tables.component';\r\n\r\n// Tabs Component\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n//import { TabsComponent } from './tabs.component';\r\n\r\n// Carousel Component\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { CarouselsComponent } from './carousels.component';\r\n\r\n// Collapse Component\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\n//import { CollapsesComponent } from './collapses.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n\r\n// Pagination Component\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\n//import { PopoversComponent } from './popovers.component';\r\n\r\n// Popover Component\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\n//import { PaginationsComponent } from './paginations.component';\r\n\r\n// Progress Component\r\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\r\n//import { ProgressComponent } from './progress.component';\r\n\r\n// Tooltip Component\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n//import { TooltipsComponent } from './tooltips.component';\r\n\r\n// navbars\r\nimport { NavbarsComponent } from './navbars/navbars.component';\r\n\r\n// Components Routing\r\nimport { BaseRoutingModule } from './base-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    BaseRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule,\r\n    CarouselModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    ProgressbarModule.forRoot(),\r\n    TooltipModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    // CardsComponent,\r\n    // FormsComponent,\r\n    // SwitchesComponent,\r\n    // TablesComponent,\r\n    // TabsComponent,\r\n    CarouselsComponent,\r\n    // CollapsesComponent,\r\n    // PaginationsComponent,\r\n    // PopoversComponent,\r\n    // ProgressComponent,\r\n    // TooltipsComponent,\r\n    NavbarsComponent\r\n  ]\r\n})\r\nexport class BaseModule { }\r\n","import {Component, OnDestroy} from '@angular/core';\r\nimport { CarouselConfig } from 'ngx-bootstrap/carousel';\r\n\r\n@Component({\r\n  templateUrl: 'carousels.component.html',\r\n  providers: [\r\n    { provide: CarouselConfig, useValue: { interval: 1500, noPause: false } },\r\n  ]\r\n})\r\nexport class CarouselsComponent implements OnDestroy {\r\n\r\n  myInterval: number | false = 6000;\r\n  slides: any[] = [];\r\n  activeSlideIndex: number = 0;\r\n  noWrapSlides: boolean = false;\r\n\r\n  constructor() {\r\n    for (let i = 0; i < 4; i++) {\r\n      this.addSlide();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.myInterval = 0;\r\n    this.noWrapSlides = true;\r\n    this.myInterval = false;\r\n  }\r\n\r\n  addSlide(): void {\r\n    setTimeout( () => {\r\n      const seed = Math.random().toString(36).slice(-6);\r\n      this.slides.push({\r\n        image: `https://picsum.photos/seed/${seed}/900/500`\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  removeSlide(index?: number): void {\r\n    const toRemove = index ? index : this.activeSlideIndex;\r\n    this.slides.splice(toRemove, 1);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvdmlld3MvYmFzZS9uYXZiYXJzL25hdmJhcnMuY29tcG9uZW50LmNzcyJ9 */\";","import {AfterViewChecked, Component, ElementRef, OnInit, Renderer2, ViewChild} from '@angular/core';\r\nimport {CollapseDirective} from 'ngx-bootstrap/collapse';\r\n\r\n@Component({\r\n  selector: 'app-navbars',\r\n  templateUrl: './navbars.component.html',\r\n  styleUrls: ['./navbars.component.css']\r\n})\r\nexport class NavbarsComponent implements OnInit, AfterViewChecked {\r\n\r\n  private _isCollapsed: boolean = true;\r\n  set isCollapsed(value) {\r\n    this._isCollapsed = value;\r\n  }\r\n  get isCollapsed() {\r\n    if (this.collapseRef) {\r\n      // temp fix for \"overflow: hidden\"\r\n      if (getComputedStyle(this.collapseRef.nativeElement).getPropertyValue('display') === 'flex') {\r\n       this.renderer.removeStyle(this.collapseRef.nativeElement, 'overflow');\r\n      }\r\n    }\r\n    return this._isCollapsed;\r\n  }\r\n\r\n  @ViewChild(CollapseDirective, { read: ElementRef, static: false }) collapse !: CollapseDirective;\r\n\r\n  collapseRef;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewChecked (): void {\r\n    this.collapseRef = this.collapse;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}